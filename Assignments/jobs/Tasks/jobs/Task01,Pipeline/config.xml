<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1295.v395eb_7400005">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2131.vb_9788088fdb_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2131.vb_9788088fdb_5">
      <jobProperties/>
      <triggers>
        <string>hudson.triggers.TimerTrigger</string>
      </triggers>
      <parameters>
        <string>name</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.7.13">
      <gitLabConnection></gitLabConnection>
      <jobCredentialId></jobCredentialId>
      <useAlternativeCredential>false</useAlternativeCredential>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>name</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.13">
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3659.v582dc37621d8">
    <script>pipeline {
    agent any
    options {
            timeout(time:1, unit:&apos;MINUTES&apos;)
            }
   post {
        always {
                echo &quot;job success&quot;
             }
        }
    triggers {
    cron &apos;*/45 * * * *&apos;
    }
    

    parameters {
    string &apos;name&apos;
    }

    
    stages {
        stage(&apos;Hello&apos;) {
            steps {
                echo &apos;Hello World&apos;
            }
        }
        stage(&apos;parameters&apos;) {
            steps {
                echo &quot;Hello ${name}&quot;
            }
        }
        stage(&apos;user input&apos;){
            input {
                message &apos;Do you want to fail the pipeline&apos;
                ok &apos;No&apos;
                submitter &apos;ritesh&apos;
            }
            steps {
                echo &quot;end&quot;
        }
    }
        stage(&apos;print success/failure messsage&apos;) {
            steps {
                echo &quot;success/failure&quot;
            }
        }
        stage(&apos;Slack Notification&apos;) {
            steps {
              slackSend channel: &apos;jnk-test0&apos;, message: &apos;Pipeline Executed Succesfully&apos;, teamDomain: &apos;opstree&apos;, tokenCredentialId: &apos;slack-token&apos;, username: &apos;Ritesh Kumar&apos;
            }
        }  
        
}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>